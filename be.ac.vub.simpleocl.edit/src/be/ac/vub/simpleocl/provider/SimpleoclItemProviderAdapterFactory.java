/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package be.ac.vub.simpleocl.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import be.ac.vub.simpleocl.util.SimpleoclAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SimpleoclItemProviderAdapterFactory extends SimpleoclAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SimpleoclItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.Module} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleItemProvider moduleItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.Module}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleAdapter() {
		if (moduleItemProvider == null) {
			moduleItemProvider = new ModuleItemProvider(this);
		}

		return moduleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.VariableExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableExpItemProvider variableExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.VariableExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableExpAdapter() {
		if (variableExpItemProvider == null) {
			variableExpItemProvider = new VariableExpItemProvider(this);
		}

		return variableExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.SuperExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuperExpItemProvider superExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.SuperExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuperExpAdapter() {
		if (superExpItemProvider == null) {
			superExpItemProvider = new SuperExpItemProvider(this);
		}

		return superExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.SelfExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelfExpItemProvider selfExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.SelfExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelfExpAdapter() {
		if (selfExpItemProvider == null) {
			selfExpItemProvider = new SelfExpItemProvider(this);
		}

		return selfExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.EnvExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnvExpItemProvider envExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.EnvExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnvExpAdapter() {
		if (envExpItemProvider == null) {
			envExpItemProvider = new EnvExpItemProvider(this);
		}

		return envExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.StringExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringExpItemProvider stringExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.StringExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringExpAdapter() {
		if (stringExpItemProvider == null) {
			stringExpItemProvider = new StringExpItemProvider(this);
		}

		return stringExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.BooleanExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanExpItemProvider booleanExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.BooleanExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanExpAdapter() {
		if (booleanExpItemProvider == null) {
			booleanExpItemProvider = new BooleanExpItemProvider(this);
		}

		return booleanExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.RealExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealExpItemProvider realExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.RealExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealExpAdapter() {
		if (realExpItemProvider == null) {
			realExpItemProvider = new RealExpItemProvider(this);
		}

		return realExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.IntegerExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerExpItemProvider integerExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.IntegerExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerExpAdapter() {
		if (integerExpItemProvider == null) {
			integerExpItemProvider = new IntegerExpItemProvider(this);
		}

		return integerExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.CollectionRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionRangeItemProvider collectionRangeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.CollectionRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionRangeAdapter() {
		if (collectionRangeItemProvider == null) {
			collectionRangeItemProvider = new CollectionRangeItemProvider(this);
		}

		return collectionRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.CollectionItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionItemItemProvider collectionItemItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.CollectionItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionItemAdapter() {
		if (collectionItemItemProvider == null) {
			collectionItemItemProvider = new CollectionItemItemProvider(this);
		}

		return collectionItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.BagExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BagExpItemProvider bagExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.BagExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBagExpAdapter() {
		if (bagExpItemProvider == null) {
			bagExpItemProvider = new BagExpItemProvider(this);
		}

		return bagExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OrderedSetExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrderedSetExpItemProvider orderedSetExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OrderedSetExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrderedSetExpAdapter() {
		if (orderedSetExpItemProvider == null) {
			orderedSetExpItemProvider = new OrderedSetExpItemProvider(this);
		}

		return orderedSetExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.SequenceExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceExpItemProvider sequenceExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.SequenceExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceExpAdapter() {
		if (sequenceExpItemProvider == null) {
			sequenceExpItemProvider = new SequenceExpItemProvider(this);
		}

		return sequenceExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.SetExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetExpItemProvider setExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.SetExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetExpAdapter() {
		if (setExpItemProvider == null) {
			setExpItemProvider = new SetExpItemProvider(this);
		}

		return setExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.TupleExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TupleExpItemProvider tupleExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.TupleExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTupleExpAdapter() {
		if (tupleExpItemProvider == null) {
			tupleExpItemProvider = new TupleExpItemProvider(this);
		}

		return tupleExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.TuplePart} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TuplePartItemProvider tuplePartItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.TuplePart}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuplePartAdapter() {
		if (tuplePartItemProvider == null) {
			tuplePartItemProvider = new TuplePartItemProvider(this);
		}

		return tuplePartItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.MapExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapExpItemProvider mapExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.MapExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapExpAdapter() {
		if (mapExpItemProvider == null) {
			mapExpItemProvider = new MapExpItemProvider(this);
		}

		return mapExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.MapElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapElementItemProvider mapElementItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.MapElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapElementAdapter() {
		if (mapElementItemProvider == null) {
			mapElementItemProvider = new MapElementItemProvider(this);
		}

		return mapElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.EnumLiteralExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumLiteralExpItemProvider enumLiteralExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.EnumLiteralExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumLiteralExpAdapter() {
		if (enumLiteralExpItemProvider == null) {
			enumLiteralExpItemProvider = new EnumLiteralExpItemProvider(this);
		}

		return enumLiteralExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclUndefinedExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclUndefinedExpItemProvider oclUndefinedExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclUndefinedExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclUndefinedExpAdapter() {
		if (oclUndefinedExpItemProvider == null) {
			oclUndefinedExpItemProvider = new OclUndefinedExpItemProvider(this);
		}

		return oclUndefinedExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.StaticPropertyCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticPropertyCallExpItemProvider staticPropertyCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.StaticPropertyCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticPropertyCallExpAdapter() {
		if (staticPropertyCallExpItemProvider == null) {
			staticPropertyCallExpItemProvider = new StaticPropertyCallExpItemProvider(this);
		}

		return staticPropertyCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.StaticNavigationOrAttributeCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticNavigationOrAttributeCallItemProvider staticNavigationOrAttributeCallItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.StaticNavigationOrAttributeCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticNavigationOrAttributeCallAdapter() {
		if (staticNavigationOrAttributeCallItemProvider == null) {
			staticNavigationOrAttributeCallItemProvider = new StaticNavigationOrAttributeCallItemProvider(this);
		}

		return staticNavigationOrAttributeCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.StaticOperationCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticOperationCallItemProvider staticOperationCallItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.StaticOperationCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticOperationCallAdapter() {
		if (staticOperationCallItemProvider == null) {
			staticOperationCallItemProvider = new StaticOperationCallItemProvider(this);
		}

		return staticOperationCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.PropertyCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyCallExpItemProvider propertyCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.PropertyCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyCallExpAdapter() {
		if (propertyCallExpItemProvider == null) {
			propertyCallExpItemProvider = new PropertyCallExpItemProvider(this);
		}

		return propertyCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.NavigationOrAttributeCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NavigationOrAttributeCallItemProvider navigationOrAttributeCallItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.NavigationOrAttributeCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNavigationOrAttributeCallAdapter() {
		if (navigationOrAttributeCallItemProvider == null) {
			navigationOrAttributeCallItemProvider = new NavigationOrAttributeCallItemProvider(this);
		}

		return navigationOrAttributeCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OperationCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationCallItemProvider operationCallItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OperationCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationCallAdapter() {
		if (operationCallItemProvider == null) {
			operationCallItemProvider = new OperationCallItemProvider(this);
		}

		return operationCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OperatorCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperatorCallExpItemProvider operatorCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OperatorCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperatorCallExpAdapter() {
		if (operatorCallExpItemProvider == null) {
			operatorCallExpItemProvider = new OperatorCallExpItemProvider(this);
		}

		return operatorCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.NotOpCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotOpCallExpItemProvider notOpCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.NotOpCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotOpCallExpAdapter() {
		if (notOpCallExpItemProvider == null) {
			notOpCallExpItemProvider = new NotOpCallExpItemProvider(this);
		}

		return notOpCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.RelOpCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelOpCallExpItemProvider relOpCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.RelOpCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelOpCallExpAdapter() {
		if (relOpCallExpItemProvider == null) {
			relOpCallExpItemProvider = new RelOpCallExpItemProvider(this);
		}

		return relOpCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.EqOpCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqOpCallExpItemProvider eqOpCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.EqOpCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqOpCallExpAdapter() {
		if (eqOpCallExpItemProvider == null) {
			eqOpCallExpItemProvider = new EqOpCallExpItemProvider(this);
		}

		return eqOpCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.AddOpCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddOpCallExpItemProvider addOpCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.AddOpCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddOpCallExpAdapter() {
		if (addOpCallExpItemProvider == null) {
			addOpCallExpItemProvider = new AddOpCallExpItemProvider(this);
		}

		return addOpCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.IntOpCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntOpCallExpItemProvider intOpCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.IntOpCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntOpCallExpAdapter() {
		if (intOpCallExpItemProvider == null) {
			intOpCallExpItemProvider = new IntOpCallExpItemProvider(this);
		}

		return intOpCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.MulOpCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MulOpCallExpItemProvider mulOpCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.MulOpCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMulOpCallExpAdapter() {
		if (mulOpCallExpItemProvider == null) {
			mulOpCallExpItemProvider = new MulOpCallExpItemProvider(this);
		}

		return mulOpCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.LambdaCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LambdaCallExpItemProvider lambdaCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.LambdaCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLambdaCallExpAdapter() {
		if (lambdaCallExpItemProvider == null) {
			lambdaCallExpItemProvider = new LambdaCallExpItemProvider(this);
		}

		return lambdaCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.BraceExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BraceExpItemProvider braceExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.BraceExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBraceExpAdapter() {
		if (braceExpItemProvider == null) {
			braceExpItemProvider = new BraceExpItemProvider(this);
		}

		return braceExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.CollectionOperationCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionOperationCallItemProvider collectionOperationCallItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.CollectionOperationCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionOperationCallAdapter() {
		if (collectionOperationCallItemProvider == null) {
			collectionOperationCallItemProvider = new CollectionOperationCallItemProvider(this);
		}

		return collectionOperationCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.IterateExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IterateExpItemProvider iterateExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.IterateExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIterateExpAdapter() {
		if (iterateExpItemProvider == null) {
			iterateExpItemProvider = new IterateExpItemProvider(this);
		}

		return iterateExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.IteratorExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IteratorExpItemProvider iteratorExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.IteratorExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIteratorExpAdapter() {
		if (iteratorExpItemProvider == null) {
			iteratorExpItemProvider = new IteratorExpItemProvider(this);
		}

		return iteratorExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.LetExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LetExpItemProvider letExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.LetExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLetExpAdapter() {
		if (letExpItemProvider == null) {
			letExpItemProvider = new LetExpItemProvider(this);
		}

		return letExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.IfExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfExpItemProvider ifExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.IfExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfExpAdapter() {
		if (ifExpItemProvider == null) {
			ifExpItemProvider = new IfExpItemProvider(this);
		}

		return ifExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.LocalVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocalVariableItemProvider localVariableItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.LocalVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocalVariableAdapter() {
		if (localVariableItemProvider == null) {
			localVariableItemProvider = new LocalVariableItemProvider(this);
		}

		return localVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.Iterator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IteratorItemProvider iteratorItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.Iterator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIteratorAdapter() {
		if (iteratorItemProvider == null) {
			iteratorItemProvider = new IteratorItemProvider(this);
		}

		return iteratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.CollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionTypeItemProvider collectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.CollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionTypeAdapter() {
		if (collectionTypeItemProvider == null) {
			collectionTypeItemProvider = new CollectionTypeItemProvider(this);
		}

		return collectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclTypeItemProvider oclTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclTypeAdapter() {
		if (oclTypeItemProvider == null) {
			oclTypeItemProvider = new OclTypeItemProvider(this);
		}

		return oclTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclModelElementExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclModelElementExpItemProvider oclModelElementExpItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclModelElementExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclModelElementExpAdapter() {
		if (oclModelElementExpItemProvider == null) {
			oclModelElementExpItemProvider = new OclModelElementExpItemProvider(this);
		}

		return oclModelElementExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.StringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringTypeItemProvider stringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.StringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringTypeAdapter() {
		if (stringTypeItemProvider == null) {
			stringTypeItemProvider = new StringTypeItemProvider(this);
		}

		return stringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.BooleanType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanTypeItemProvider booleanTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.BooleanType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanTypeAdapter() {
		if (booleanTypeItemProvider == null) {
			booleanTypeItemProvider = new BooleanTypeItemProvider(this);
		}

		return booleanTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.IntegerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerTypeItemProvider integerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.IntegerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerTypeAdapter() {
		if (integerTypeItemProvider == null) {
			integerTypeItemProvider = new IntegerTypeItemProvider(this);
		}

		return integerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.RealType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealTypeItemProvider realTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.RealType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealTypeAdapter() {
		if (realTypeItemProvider == null) {
			realTypeItemProvider = new RealTypeItemProvider(this);
		}

		return realTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.BagType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BagTypeItemProvider bagTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.BagType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBagTypeAdapter() {
		if (bagTypeItemProvider == null) {
			bagTypeItemProvider = new BagTypeItemProvider(this);
		}

		return bagTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OrderedSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrderedSetTypeItemProvider orderedSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OrderedSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrderedSetTypeAdapter() {
		if (orderedSetTypeItemProvider == null) {
			orderedSetTypeItemProvider = new OrderedSetTypeItemProvider(this);
		}

		return orderedSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.SequenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceTypeItemProvider sequenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.SequenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceTypeAdapter() {
		if (sequenceTypeItemProvider == null) {
			sequenceTypeItemProvider = new SequenceTypeItemProvider(this);
		}

		return sequenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.SetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetTypeItemProvider setTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.SetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetTypeAdapter() {
		if (setTypeItemProvider == null) {
			setTypeItemProvider = new SetTypeItemProvider(this);
		}

		return setTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclAnyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclAnyTypeItemProvider oclAnyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclAnyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclAnyTypeAdapter() {
		if (oclAnyTypeItemProvider == null) {
			oclAnyTypeItemProvider = new OclAnyTypeItemProvider(this);
		}

		return oclAnyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.TupleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TupleTypeItemProvider tupleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.TupleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTupleTypeAdapter() {
		if (tupleTypeItemProvider == null) {
			tupleTypeItemProvider = new TupleTypeItemProvider(this);
		}

		return tupleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.TupleTypeAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TupleTypeAttributeItemProvider tupleTypeAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.TupleTypeAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTupleTypeAttributeAdapter() {
		if (tupleTypeAttributeItemProvider == null) {
			tupleTypeAttributeItemProvider = new TupleTypeAttributeItemProvider(this);
		}

		return tupleTypeAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclModelElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclModelElementItemProvider oclModelElementItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclModelElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclModelElementAdapter() {
		if (oclModelElementItemProvider == null) {
			oclModelElementItemProvider = new OclModelElementItemProvider(this);
		}

		return oclModelElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.MapType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapTypeItemProvider mapTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.MapType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapTypeAdapter() {
		if (mapTypeItemProvider == null) {
			mapTypeItemProvider = new MapTypeItemProvider(this);
		}

		return mapTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.LambdaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LambdaTypeItemProvider lambdaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.LambdaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLambdaTypeAdapter() {
		if (lambdaTypeItemProvider == null) {
			lambdaTypeItemProvider = new LambdaTypeItemProvider(this);
		}

		return lambdaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.EnvType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnvTypeItemProvider envTypeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.EnvType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnvTypeAdapter() {
		if (envTypeItemProvider == null) {
			envTypeItemProvider = new EnvTypeItemProvider(this);
		}

		return envTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclFeatureDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclFeatureDefinitionItemProvider oclFeatureDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclFeatureDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclFeatureDefinitionAdapter() {
		if (oclFeatureDefinitionItemProvider == null) {
			oclFeatureDefinitionItemProvider = new OclFeatureDefinitionItemProvider(this);
		}

		return oclFeatureDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclContextDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclContextDefinitionItemProvider oclContextDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclContextDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclContextDefinitionAdapter() {
		if (oclContextDefinitionItemProvider == null) {
			oclContextDefinitionItemProvider = new OclContextDefinitionItemProvider(this);
		}

		return oclContextDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.Operation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationItemProvider operationItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.Operation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationAdapter() {
		if (operationItemProvider == null) {
			operationItemProvider = new OperationItemProvider(this);
		}

		return operationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclMetamodel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclMetamodelItemProvider oclMetamodelItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclMetamodel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclMetamodelAdapter() {
		if (oclMetamodelItemProvider == null) {
			oclMetamodelItemProvider = new OclMetamodelItemProvider(this);
		}

		return oclMetamodelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link be.ac.vub.simpleocl.OclInstanceModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclInstanceModelItemProvider oclInstanceModelItemProvider;

	/**
	 * This creates an adapter for a {@link be.ac.vub.simpleocl.OclInstanceModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclInstanceModelAdapter() {
		if (oclInstanceModelItemProvider == null) {
			oclInstanceModelItemProvider = new OclInstanceModelItemProvider(this);
		}

		return oclInstanceModelItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (moduleItemProvider != null) moduleItemProvider.dispose();
		if (importItemProvider != null) importItemProvider.dispose();
		if (variableExpItemProvider != null) variableExpItemProvider.dispose();
		if (superExpItemProvider != null) superExpItemProvider.dispose();
		if (selfExpItemProvider != null) selfExpItemProvider.dispose();
		if (envExpItemProvider != null) envExpItemProvider.dispose();
		if (stringExpItemProvider != null) stringExpItemProvider.dispose();
		if (booleanExpItemProvider != null) booleanExpItemProvider.dispose();
		if (realExpItemProvider != null) realExpItemProvider.dispose();
		if (integerExpItemProvider != null) integerExpItemProvider.dispose();
		if (collectionRangeItemProvider != null) collectionRangeItemProvider.dispose();
		if (collectionItemItemProvider != null) collectionItemItemProvider.dispose();
		if (bagExpItemProvider != null) bagExpItemProvider.dispose();
		if (orderedSetExpItemProvider != null) orderedSetExpItemProvider.dispose();
		if (sequenceExpItemProvider != null) sequenceExpItemProvider.dispose();
		if (setExpItemProvider != null) setExpItemProvider.dispose();
		if (tupleExpItemProvider != null) tupleExpItemProvider.dispose();
		if (tuplePartItemProvider != null) tuplePartItemProvider.dispose();
		if (mapExpItemProvider != null) mapExpItemProvider.dispose();
		if (mapElementItemProvider != null) mapElementItemProvider.dispose();
		if (enumLiteralExpItemProvider != null) enumLiteralExpItemProvider.dispose();
		if (oclUndefinedExpItemProvider != null) oclUndefinedExpItemProvider.dispose();
		if (staticPropertyCallExpItemProvider != null) staticPropertyCallExpItemProvider.dispose();
		if (staticNavigationOrAttributeCallItemProvider != null) staticNavigationOrAttributeCallItemProvider.dispose();
		if (staticOperationCallItemProvider != null) staticOperationCallItemProvider.dispose();
		if (propertyCallExpItemProvider != null) propertyCallExpItemProvider.dispose();
		if (navigationOrAttributeCallItemProvider != null) navigationOrAttributeCallItemProvider.dispose();
		if (operationCallItemProvider != null) operationCallItemProvider.dispose();
		if (operatorCallExpItemProvider != null) operatorCallExpItemProvider.dispose();
		if (notOpCallExpItemProvider != null) notOpCallExpItemProvider.dispose();
		if (relOpCallExpItemProvider != null) relOpCallExpItemProvider.dispose();
		if (eqOpCallExpItemProvider != null) eqOpCallExpItemProvider.dispose();
		if (addOpCallExpItemProvider != null) addOpCallExpItemProvider.dispose();
		if (intOpCallExpItemProvider != null) intOpCallExpItemProvider.dispose();
		if (mulOpCallExpItemProvider != null) mulOpCallExpItemProvider.dispose();
		if (lambdaCallExpItemProvider != null) lambdaCallExpItemProvider.dispose();
		if (braceExpItemProvider != null) braceExpItemProvider.dispose();
		if (collectionOperationCallItemProvider != null) collectionOperationCallItemProvider.dispose();
		if (iterateExpItemProvider != null) iterateExpItemProvider.dispose();
		if (iteratorExpItemProvider != null) iteratorExpItemProvider.dispose();
		if (letExpItemProvider != null) letExpItemProvider.dispose();
		if (ifExpItemProvider != null) ifExpItemProvider.dispose();
		if (localVariableItemProvider != null) localVariableItemProvider.dispose();
		if (iteratorItemProvider != null) iteratorItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (collectionTypeItemProvider != null) collectionTypeItemProvider.dispose();
		if (oclTypeItemProvider != null) oclTypeItemProvider.dispose();
		if (oclModelElementExpItemProvider != null) oclModelElementExpItemProvider.dispose();
		if (stringTypeItemProvider != null) stringTypeItemProvider.dispose();
		if (booleanTypeItemProvider != null) booleanTypeItemProvider.dispose();
		if (integerTypeItemProvider != null) integerTypeItemProvider.dispose();
		if (realTypeItemProvider != null) realTypeItemProvider.dispose();
		if (bagTypeItemProvider != null) bagTypeItemProvider.dispose();
		if (orderedSetTypeItemProvider != null) orderedSetTypeItemProvider.dispose();
		if (sequenceTypeItemProvider != null) sequenceTypeItemProvider.dispose();
		if (setTypeItemProvider != null) setTypeItemProvider.dispose();
		if (oclAnyTypeItemProvider != null) oclAnyTypeItemProvider.dispose();
		if (tupleTypeItemProvider != null) tupleTypeItemProvider.dispose();
		if (tupleTypeAttributeItemProvider != null) tupleTypeAttributeItemProvider.dispose();
		if (oclModelElementItemProvider != null) oclModelElementItemProvider.dispose();
		if (mapTypeItemProvider != null) mapTypeItemProvider.dispose();
		if (lambdaTypeItemProvider != null) lambdaTypeItemProvider.dispose();
		if (envTypeItemProvider != null) envTypeItemProvider.dispose();
		if (oclFeatureDefinitionItemProvider != null) oclFeatureDefinitionItemProvider.dispose();
		if (oclContextDefinitionItemProvider != null) oclContextDefinitionItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (operationItemProvider != null) operationItemProvider.dispose();
		if (oclMetamodelItemProvider != null) oclMetamodelItemProvider.dispose();
		if (oclInstanceModelItemProvider != null) oclInstanceModelItemProvider.dispose();
	}

}
